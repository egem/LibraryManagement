{
	"info": {
		"_postman_id": "9eac58e9-d3cb-4bdf-85a3-64eefe118cd0",
		"name": "Library Case Tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "1946352"
	},
	"item": [
		{
			"name": "Create User",
			"item": [
				{
					"name": "Create User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"",
									"    var jsonData = pm.response.json();",
									"    ",
									"    // Assuming the response contains an `id` field",
									"    pm.globals.set(\"createdUserId\", jsonData.id);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"Username1\"\n}"
						},
						"url": {
							"raw": "{{protocol}}://{{hostname}}:{{port}}/users",
							"protocol": "{{protocol}}",
							"host": [
								"{{hostname}}"
							],
							"port": "{{port}}",
							"path": [
								"users"
							]
						}
					},
					"response": [
						{
							"name": "Creating a user",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"name": "Content-Type",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"Esin Öner\"\n}"
								},
								"url": {
									"raw": "localhost:3000/users",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"users"
									]
								}
							},
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"",
									"    pm.globals.unset(\"createdUserId\");",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{hostname}}:{{port}}/users/{{createdUserId}}",
							"protocol": "{{protocol}}",
							"host": [
								"{{hostname}}"
							],
							"port": "{{port}}",
							"path": [
								"users",
								"{{createdUserId}}"
							]
						}
					},
					"response": [
						{
							"name": "Getting a user with no borrow history",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "localhost:3000/users/4",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"users",
										"4"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "62"
								},
								{
									"key": "ETag",
									"value": "W/\"3e-8zOIww9IbcIFYtNxWy65ftk4Z8c\""
								},
								{
									"key": "Date",
									"value": "Fri, 11 Oct 2019 12:34:37 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 4,\n    \"name\": \"Kadir Mutlu\",\n    \"books\": {\n        \"past\": [],\n        \"present\": []\n    }\n}"
						},
						{
							"name": "Getting a user with his past and current book borrow list",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "localhost:3000/users/2",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"users",
										"2"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"id\": 2,\n    \"name\": \"Enes Faruk Meniz\",\n    \"books\": {\n        \"past\": [\n            {\n                \"name\": \"I, Robot\",\n                \"userScore\": 5\n            },\n            {\n                \"name\": \"The Hitchhiker's Guide to the Galaxy\",\n                \"userScore\": 10\n            }\n        ],\n        \"present\": [\n            {\n                \"name\": \"Brave New World\"\n            }\n        ]\n    }\n}"
						}
					]
				}
			]
		},
		{
			"name": "Create User With Empty Name",
			"item": [
				{
					"name": "Create User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"\"\n}"
						},
						"url": {
							"raw": "{{protocol}}://{{hostname}}:{{port}}/users",
							"protocol": "{{protocol}}",
							"host": [
								"{{hostname}}"
							],
							"port": "{{port}}",
							"path": [
								"users"
							]
						}
					},
					"response": [
						{
							"name": "Creating a user",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"name": "Content-Type",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"Esin Öner\"\n}"
								},
								"url": {
									"raw": "localhost:3000/users",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"users"
									]
								}
							},
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "Create User With Empty Body",
			"item": [
				{
					"name": "Create User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{protocol}}://{{hostname}}:{{port}}/users",
							"protocol": "{{protocol}}",
							"host": [
								"{{hostname}}"
							],
							"port": "{{port}}",
							"path": [
								"users"
							]
						}
					},
					"response": [
						{
							"name": "Creating a user",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"name": "Content-Type",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"Esin Öner\"\n}"
								},
								"url": {
									"raw": "localhost:3000/users",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"users"
									]
								}
							},
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "Create Book",
			"item": [
				{
					"name": "Create Book",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"",
									"    var jsonData = pm.response.json();",
									"    ",
									"    // Assuming the response contains an `id` field",
									"    pm.globals.set(\"createdBookId\", jsonData.id);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"Neuromancer\"\n}"
						},
						"url": {
							"raw": "{{protocol}}://{{hostname}}:{{port}}/books",
							"protocol": "{{protocol}}",
							"host": [
								"{{hostname}}"
							],
							"port": "{{port}}",
							"path": [
								"books"
							]
						}
					},
					"response": [
						{
							"name": "Creating a book",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"name": "Content-Type",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"Neuromancer\"\n}"
								},
								"url": {
									"raw": "localhost:3000/books",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"books"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get Book",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"",
									"    pm.globals.unset(\"createdBookId\");",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{hostname}}:{{port}}/books/{{createdBookId}}",
							"protocol": "{{protocol}}",
							"host": [
								"{{hostname}}"
							],
							"port": "{{port}}",
							"path": [
								"books",
								"{{createdBookId}}"
							]
						}
					},
					"response": [
						{
							"name": "Getting a book with its average user score",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "localhost:3000/books/2",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"books",
										"2"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"id\": 2,\n    \"name\": \"I, Robot\",\n    \"score\": \"5.33\"\n}"
						},
						{
							"name": "Getting a book which is not scored yet",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "localhost:3000/books/3",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"books",
										"3"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "41"
								},
								{
									"key": "ETag",
									"value": "W/\"29-72386y8GesiT9mcZMMIfiT6ahRw\""
								},
								{
									"key": "Date",
									"value": "Fri, 11 Oct 2019 12:30:45 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 3,\n    \"name\": \"Dune\",\n    \"score\": -1\n}"
						}
					]
				}
			]
		},
		{
			"name": "Create Book With Empty Name",
			"item": [
				{
					"name": "Create Book",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"\"\n}"
						},
						"url": {
							"raw": "{{protocol}}://{{hostname}}:{{port}}/books",
							"protocol": "{{protocol}}",
							"host": [
								"{{hostname}}"
							],
							"port": "{{port}}",
							"path": [
								"books"
							]
						}
					},
					"response": [
						{
							"name": "Creating a book",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"name": "Content-Type",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"Neuromancer\"\n}"
								},
								"url": {
									"raw": "localhost:3000/books",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"books"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "Create Book With Empty Body",
			"item": [
				{
					"name": "Create Book",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{protocol}}://{{hostname}}:{{port}}/books",
							"protocol": "{{protocol}}",
							"host": [
								"{{hostname}}"
							],
							"port": "{{port}}",
							"path": [
								"books"
							]
						}
					},
					"response": [
						{
							"name": "Creating a book",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"name": "Content-Type",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"Neuromancer\"\n}"
								},
								"url": {
									"raw": "localhost:3000/books",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"books"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "Borrow and Return Book",
			"item": [
				{
					"name": "Create User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"",
									"    var jsonData = pm.response.json();",
									"    ",
									"    // Assuming the response contains an `id` field",
									"    pm.globals.set(\"createdUserId\", jsonData.id);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"Username1\"\n}"
						},
						"url": {
							"raw": "{{protocol}}://{{hostname}}:{{port}}/users",
							"protocol": "{{protocol}}",
							"host": [
								"{{hostname}}"
							],
							"port": "{{port}}",
							"path": [
								"users"
							]
						}
					},
					"response": [
						{
							"name": "Creating a user",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"name": "Content-Type",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"Esin Öner\"\n}"
								},
								"url": {
									"raw": "localhost:3000/users",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"users"
									]
								}
							},
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Create Another User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"",
									"    var jsonData = pm.response.json();",
									"    ",
									"    // Assuming the response contains an `id` field",
									"    pm.globals.set(\"secondUserId\", jsonData.id);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"Username1\"\n}"
						},
						"url": {
							"raw": "{{protocol}}://{{hostname}}:{{port}}/users",
							"protocol": "{{protocol}}",
							"host": [
								"{{hostname}}"
							],
							"port": "{{port}}",
							"path": [
								"users"
							]
						}
					},
					"response": [
						{
							"name": "Creating a user",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"name": "Content-Type",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"Esin Öner\"\n}"
								},
								"url": {
									"raw": "localhost:3000/users",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"users"
									]
								}
							},
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Create Book",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"",
									"    var jsonData = pm.response.json();",
									"    ",
									"    // Assuming the response contains an `id` field",
									"    pm.globals.set(\"createdBookId\", jsonData.id);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"Neuromancer\"\n}"
						},
						"url": {
							"raw": "{{protocol}}://{{hostname}}:{{port}}/books",
							"protocol": "{{protocol}}",
							"host": [
								"{{hostname}}"
							],
							"port": "{{port}}",
							"path": [
								"books"
							]
						}
					},
					"response": [
						{
							"name": "Creating a book",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"name": "Content-Type",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"Neuromancer\"\n}"
								},
								"url": {
									"raw": "localhost:3000/books",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"books"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Borrow Book",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"",
									"    var jsonData = pm.response.json();",
									"    ",
									"    // Assuming the response contains an `id` field",
									"    pm.globals.set(\"borrowId\", jsonData.id);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{hostname}}:{{port}}/users/{{createdUserId}}/borrow/{{createdBookId}}",
							"protocol": "{{protocol}}",
							"host": [
								"{{hostname}}"
							],
							"port": "{{port}}",
							"path": [
								"users",
								"{{createdUserId}}",
								"borrow",
								"{{createdBookId}}"
							]
						}
					},
					"response": [
						{
							"name": "User borrowed a book succesfully",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "localhost:3000/users/2/borrow/4",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"users",
										"2",
										"borrow",
										"4"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Date",
									"value": "Fri, 11 Oct 2019 12:37:10 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Borrow Book Again",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{hostname}}:{{port}}/users/{{createdUserId}}/borrow/{{createdBookId}}",
							"protocol": "{{protocol}}",
							"host": [
								"{{hostname}}"
							],
							"port": "{{port}}",
							"path": [
								"users",
								"{{createdUserId}}",
								"borrow",
								"{{createdBookId}}"
							]
						}
					},
					"response": [
						{
							"name": "User borrowed a book succesfully",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "localhost:3000/users/2/borrow/4",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"users",
										"2",
										"borrow",
										"4"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Date",
									"value": "Fri, 11 Oct 2019 12:37:10 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Borrow Book Via Another User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{hostname}}:{{port}}/users/{{secondUserId}}/borrow/{{createdBookId}}",
							"protocol": "{{protocol}}",
							"host": [
								"{{hostname}}"
							],
							"port": "{{port}}",
							"path": [
								"users",
								"{{secondUserId}}",
								"borrow",
								"{{createdBookId}}"
							]
						}
					},
					"response": [
						{
							"name": "User borrowed a book succesfully",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "localhost:3000/users/2/borrow/4",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"users",
										"2",
										"borrow",
										"4"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Date",
									"value": "Fri, 11 Oct 2019 12:37:10 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get Borrowing",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{hostname}}:{{port}}/borrowings/{{borrowId}}",
							"protocol": "{{protocol}}",
							"host": [
								"{{hostname}}"
							],
							"port": "{{port}}",
							"path": [
								"borrowings",
								"{{borrowId}}"
							]
						}
					},
					"response": [
						{
							"name": "Getting a book with its average user score",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "localhost:3000/books/2",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"books",
										"2"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"id\": 2,\n    \"name\": \"I, Robot\",\n    \"score\": \"5.33\"\n}"
						},
						{
							"name": "Getting a book which is not scored yet",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "localhost:3000/books/3",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"books",
										"3"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "41"
								},
								{
									"key": "ETag",
									"value": "W/\"29-72386y8GesiT9mcZMMIfiT6ahRw\""
								},
								{
									"key": "Date",
									"value": "Fri, 11 Oct 2019 12:30:45 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 3,\n    \"name\": \"Dune\",\n    \"score\": -1\n}"
						}
					]
				},
				{
					"name": "Return Book Via Another User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"score\": 0\n}"
						},
						"url": {
							"raw": "{{protocol}}://{{hostname}}:{{port}}/users/{{secondUserId}}/return/{{createdBookId}}",
							"protocol": "{{protocol}}",
							"host": [
								"{{hostname}}"
							],
							"port": "{{port}}",
							"path": [
								"users",
								"{{secondUserId}}",
								"return",
								"{{createdBookId}}"
							]
						}
					},
					"response": [
						{
							"name": "User returning a book with his score",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"name": "Content-Type",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"score\": 9\n}"
								},
								"url": {
									"raw": "localhost:3000/users/2/return/5",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"users",
										"2",
										"return",
										"5"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Return Book",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"score\": 0\n}"
						},
						"url": {
							"raw": "{{protocol}}://{{hostname}}:{{port}}/users/{{createdUserId}}/return/{{createdBookId}}",
							"protocol": "{{protocol}}",
							"host": [
								"{{hostname}}"
							],
							"port": "{{port}}",
							"path": [
								"users",
								"{{createdUserId}}",
								"return",
								"{{createdBookId}}"
							]
						}
					},
					"response": [
						{
							"name": "User returning a book with his score",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"name": "Content-Type",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"score\": 9\n}"
								},
								"url": {
									"raw": "localhost:3000/users/2/return/5",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"users",
										"2",
										"return",
										"5"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Return Book Again",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"score\": 0\n}"
						},
						"url": {
							"raw": "{{protocol}}://{{hostname}}:{{port}}/users/{{createdUserId}}/return/{{createdBookId}}",
							"protocol": "{{protocol}}",
							"host": [
								"{{hostname}}"
							],
							"port": "{{port}}",
							"path": [
								"users",
								"{{createdUserId}}",
								"return",
								"{{createdBookId}}"
							]
						}
					},
					"response": [
						{
							"name": "User returning a book with his score",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"name": "Content-Type",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"score\": 9\n}"
								},
								"url": {
									"raw": "localhost:3000/users/2/return/5",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"users",
										"2",
										"return",
										"5"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		}
	]
}